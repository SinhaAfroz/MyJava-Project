/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ticket_reservation;

import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.io.PrintWriter;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author sinha
 */
public class TicketManage extends javax.swing.JFrame {

    public String c2d_file = "CD.txt";
    public String d2c_file = "DC.txt";
    
    /**
     * Creates new form TicketManage
     */
    public TicketManage() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        minimize = new javax.swing.JLabel();
        close = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        addFile = new javax.swing.JButton();
        importTable = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        from = new javax.swing.JTextField();
        to = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        type_t = new javax.swing.JTextField();
        id_tInfo = new javax.swing.JTextField();
        time_t = new javax.swing.JTextField();
        ac_t = new javax.swing.JTextField();
        fare_t = new javax.swing.JTextField();
        delete_bus = new javax.swing.JButton();
        update = new javax.swing.JButton();
        fare_update = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        showChooseButton = new javax.swing.JTextField();
        reset = new javax.swing.JButton();
        back = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setResizable(false);

        jPanel2.setBackground(new java.awt.Color(255, 204, 255));

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel1.setText("Ticketing");

        minimize.setFont(new java.awt.Font("Tahoma", 1, 22)); // NOI18N
        minimize.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        minimize.setText("-");
        minimize.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                minimizeMouseClicked(evt);
            }
        });

        close.setFont(new java.awt.Font("Tahoma", 1, 22)); // NOI18N
        close.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        close.setText("x");
        close.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                closeMouseClicked(evt);
            }
        });

        jPanel1.setBackground(new java.awt.Color(204, 204, 204));

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        jScrollPane1.setViewportView(jTable1);

        addFile.setText("Add to File");
        addFile.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                addFileMouseClicked(evt);
            }
        });

        importTable.setText("Import from File");
        importTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                importTableMouseClicked(evt);
            }
        });
        importTable.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                importTableActionPerformed(evt);
            }
        });

        jLabel2.setText("From");

        jLabel3.setText("To");

        from.setText("Dhaka/Chottogram");

        to.setText("Dhaka/Chottogram");

        jLabel4.setText("Type");

        jLabel5.setText("ID");

        jLabel6.setText("Time");

        jLabel7.setText("AC");

        jLabel8.setText("Fare");

        type_t.setText("Business/Economy");

        time_t.setText("EX:9.00pm");

        ac_t.setText("Yes/no");

        delete_bus.setText("Delete Route");
        delete_bus.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                delete_busMouseClicked(evt);
            }
        });

        update.setText("Update File");
        update.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                updateMouseClicked(evt);
            }
        });

        jLabel9.setText("fare to update");

        showChooseButton.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        showChooseButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                showChooseButtonActionPerformed(evt);
            }
        });

        reset.setText("Reset");
        reset.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                resetMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(51, 51, 51)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2)
                    .addComponent(jLabel5)
                    .addComponent(jLabel4)
                    .addComponent(jLabel6)
                    .addComponent(jLabel8)
                    .addComponent(jLabel7))
                .addGap(27, 27, 27)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(from, javax.swing.GroupLayout.DEFAULT_SIZE, 106, Short.MAX_VALUE)
                    .addComponent(ac_t)
                    .addComponent(fare_t, javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(type_t)
                    .addComponent(id_tInfo)
                    .addComponent(time_t, javax.swing.GroupLayout.Alignment.LEADING))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel3, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel9, javax.swing.GroupLayout.Alignment.TRAILING))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(to, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(26, 26, 26)
                        .addComponent(fare_update, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 555, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(68, 68, 68)
                        .addComponent(importTable)
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(delete_bus)
                                .addGap(18, 18, 18)
                                .addComponent(addFile))
                            .addComponent(showChooseButton, javax.swing.GroupLayout.PREFERRED_SIZE, 177, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(27, 27, 27)
                        .addComponent(update)))
                .addContainerGap(42, Short.MAX_VALUE))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(242, 242, 242)
                .addComponent(reset)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 131, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(from, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3)
                    .addComponent(to, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(id_tInfo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(10, 10, 10)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(type_t, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(time_t, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(ac_t, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(fare_t, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel9)
                    .addComponent(fare_update, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(12, 12, 12)
                .addComponent(reset)
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(importTable)
                    .addComponent(addFile)
                    .addComponent(delete_bus)
                    .addComponent(update))
                .addGap(27, 27, 27)
                .addComponent(showChooseButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(113, Short.MAX_VALUE))
        );

        back.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        back.setText("<");
        back.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                backMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addGap(146, 146, 146)
                .addComponent(back)
                .addGap(18, 18, 18)
                .addComponent(minimize)
                .addGap(18, 18, 18)
                .addComponent(close)
                .addGap(41, 41, 41))
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(minimize)
                            .addComponent(close)))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(23, 23, 23)
                        .addComponent(jLabel1))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(back)))
                .addGap(29, 29, 29)
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        setBounds(0, 0, 643, 637);
    }// </editor-fold>//GEN-END:initComponents

    private void minimizeMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_minimizeMouseClicked
        this.setState(JFrame.ICONIFIED);
    }//GEN-LAST:event_minimizeMouseClicked

    private void closeMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_closeMouseClicked
        System.exit(0);
    }//GEN-LAST:event_closeMouseClicked

    private void importTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_importTableMouseClicked
       this.importFile();
       showChooseButton.setText("File Imported...");
    }//GEN-LAST:event_importTableMouseClicked
    
    private void importTableActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_importTableActionPerformed
       
    }//GEN-LAST:event_importTableActionPerformed

    private void addFileMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_addFileMouseClicked
        this.exportFile();
        showChooseButton.setText("Adding File...");
    }//GEN-LAST:event_addFileMouseClicked

    private void backMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_backMouseClicked
        Admin a = new Admin();
        a.setVisible(true);
        a.pack();
        a.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        this.dispose();
        
    }//GEN-LAST:event_backMouseClicked

    private void delete_busMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_delete_busMouseClicked
        this.removeBusRoute(id_tInfo.getText());
        showChooseButton.setText("Deleting File...");
    }//GEN-LAST:event_delete_busMouseClicked

    private void updateMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_updateMouseClicked
        
        //this.test();
        this.updateRoute(id_tInfo.getText(), fare_update.getText());
        showChooseButton.setText("Updated File...");
    }//GEN-LAST:event_updateMouseClicked

    private void showChooseButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_showChooseButtonActionPerformed
        
    }//GEN-LAST:event_showChooseButtonActionPerformed

    private void resetMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_resetMouseClicked
        this.resetData();
    }//GEN-LAST:event_resetMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(TicketManage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(TicketManage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(TicketManage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(TicketManage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new TicketManage().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField ac_t;
    private javax.swing.JButton addFile;
    private javax.swing.JLabel back;
    private javax.swing.JLabel close;
    private javax.swing.JButton delete_bus;
    private javax.swing.JTextField fare_t;
    private javax.swing.JTextField fare_update;
    private javax.swing.JTextField from;
    private javax.swing.JTextField id_tInfo;
    private javax.swing.JButton importTable;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JLabel minimize;
    private javax.swing.JButton reset;
    private javax.swing.JTextField showChooseButton;
    private javax.swing.JTextField time_t;
    private javax.swing.JTextField to;
    private javax.swing.JTextField type_t;
    private javax.swing.JButton update;
    // End of variables declaration//GEN-END:variables
    private void exportFile(){
        String source = from.getText();
        String destination = to.getText();
        String id = id_tInfo.getText();
        String time = time_t.getText();
        String type = type_t.getText();
        String ac = ac_t.getText();
        String fare = fare_t.getText();
        
        
   
        if(source.equalsIgnoreCase("Dhaka")){
            if(destination.equalsIgnoreCase("Chottogram")){
                File file = new File(d2c_file);
                try{
                    PrintWriter pw2 = new PrintWriter(new FileOutputStream(file, true));
                    pw2.append( System.lineSeparator()+ id + "," + source +"," + destination +","+ type+","+ time+","+ ac+ ","+ fare );
                    pw2.close();

                }catch (FileNotFoundException ex) {
                    Logger.getLogger(Admin.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        }
        else if(source.equalsIgnoreCase("Chottogram")){
            if(destination.equalsIgnoreCase("Dhaka")){
                File file = new File(c2d_file);
                try{
                    PrintWriter pw1 = new PrintWriter(new FileOutputStream(file, true));
                    pw1.append(System.lineSeparator()+ id + "," + source +"," + destination +","+ type+","+ time+","+ ac+ ","+ fare );
                    pw1.close();


                }catch (FileNotFoundException ex) {
                    Logger.getLogger(Admin.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        }
        else{

        }
    }
    private void importFile(){
        String source = from.getText();
        String destination = to.getText();
        if(source.equalsIgnoreCase("Dhaka")){
            if(destination.equalsIgnoreCase("Chottogram")){
                File file = new File(d2c_file);
                try{
                    BufferedReader br = new BufferedReader(new FileReader(file));
                    String firstLine = br.readLine().trim();
                    String[] columsName = firstLine.split("/");
                    DefaultTableModel model = (DefaultTableModel)jTable1.getModel();
                    model.setColumnIdentifiers(columsName);

                    Object[] tableLines = br.lines().toArray();

                    for(int i = 0; i < tableLines.length; i++){
                        String line = tableLines[i].toString().trim();
                        String[] dataRow = line.split(",");
                        model.addRow(dataRow);

                    }

                } catch (FileNotFoundException ex) {
                    Logger.getLogger(Admin.class.getName()).log(Level.SEVERE, null, ex);
                }
                catch (IOException ex) {
                    Logger.getLogger(Admin.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        }
        else if(source.equalsIgnoreCase("Chottogram")){
            if(destination.equalsIgnoreCase("Dhaka")){
                File file = new File(c2d_file);
                try{
                    BufferedReader br = new BufferedReader(new FileReader(file));
                    String firstLine = br.readLine().trim();
                    String[] columsName = firstLine.split("/");
                    DefaultTableModel model = (DefaultTableModel)jTable1.getModel();
                    model.setColumnIdentifiers(columsName);

                    Object[] tableLines = br.lines().toArray();

                    for(int i = 0; i < tableLines.length; i++){
                        String line = tableLines[i].toString().trim();
                        String[] dataRow = line.split(",");
                        model.addRow(dataRow);

                    }

                } catch (FileNotFoundException ex) {
                    Logger.getLogger(Admin.class.getName()).log(Level.SEVERE, null, ex);
                }
                catch (IOException ex) {
                    Logger.getLogger(Admin.class.getName()).log(Level.SEVERE, null, ex);
                }
            }

        }
        else{
            JOptionPane.showMessageDialog(null,"Write from and to ");
        }
    }
   
    public boolean removeBusRoute(String busId) {
        String source = from.getText();
        String destination = to.getText();
        
        String fileName = "";
        
        if(source.equalsIgnoreCase("Chottogram") &&
           destination.equalsIgnoreCase("Dhaka"))
            fileName = c2d_file;
        else if(source.equalsIgnoreCase("Dhaka") &&
           destination.equalsIgnoreCase("Chottogram"))
            fileName = d2c_file;
        else{
            return false;
        }
        
        File inputFile = new File(fileName);
        String content = "";
        try
        {
            BufferedReader reader = new BufferedReader(new FileReader(inputFile));

            String currentLine;
            System.out.println("bus id "+busId);
            while((currentLine = reader.readLine()) != null) {
                String [] s1 = currentLine.split(",");
                String fileBusId = s1[0];

                 if(fileBusId.equals(busId)) {
                    System.out.println("file bus id "+ fileBusId);
                    continue;
                }
                content += currentLine + System.getProperty("line.separator");
            }
            reader.close();
            writeIntoFile(fileName, content);
            return true;
        } catch (FileNotFoundException ex) {
            Logger.getLogger(TicketManage.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IOException ex) {
            Logger.getLogger(TicketManage.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        return false;
          
    }
    
    public String getUpdatedLine(String currentLine, String busFare) {
        String updatedLine = "";
        
        String [] s1 = currentLine.split(",");
        
        updatedLine = s1[0];
        System.out.println("updated line " + currentLine);
        for (int i = 1; i < s1.length; i++) {
            if (i == 6) {
                updatedLine = updatedLine + "," + busFare;
            } else {
                updatedLine = updatedLine + "," + s1[i];
            }
        }
        return updatedLine;
    }
    public boolean updateRoute(String busId, String fareToUpdate){
        
        String source = from.getText();
        String destination = to.getText();
        
        System.out.println("busId " + busId);
        System.out.println("update fare " + fareToUpdate);
        
        String fileName = "";
        
        if(source.equalsIgnoreCase("Chottogram") &&
           destination.equalsIgnoreCase("Dhaka"))
            fileName = c2d_file;
        else if(source.equalsIgnoreCase("Dhaka") &&
           destination.equalsIgnoreCase("Chottogram"))
            fileName = d2c_file;
        else{
            return false;
        }
        
        File inputFile = new File(fileName);
        String content = "";
        try
        {
            BufferedReader reader = new BufferedReader(new FileReader(inputFile));

            String currentLine;
            System.out.println("bus id "+busId);
            while((currentLine = reader.readLine()) != null) {
                String [] s1 = currentLine.split(",");
                String fileBusId = s1[0];

                if(fileBusId.equals(busId)) {
                    System.out.println("file bus id "+ fileBusId);
                    currentLine = getUpdatedLine(currentLine, fareToUpdate);
                }
                content += currentLine + System.getProperty("line.separator");
            }
            reader.close();
            writeIntoFile(fileName, content);
            return true;
        } catch (FileNotFoundException ex) {
            Logger.getLogger(TicketManage.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IOException ex) {
            Logger.getLogger(TicketManage.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        
        return false;
    }

    public void writeIntoFile(String filename, String fileContent) throws IOException
    {
        File file = new File(filename);

        try (BufferedWriter writer = new BufferedWriter(new FileWriter(file))) {
            //writer.flush();
            //writer.append(fileContent);
            writer.write(fileContent);
        }
        
        
    }
    
    private void resetData(){
        jTable1.setModel(new DefaultTableModel(null,new String[]{"ID", "Type", "Time", "AC", "fare" }));
        
    }
}
